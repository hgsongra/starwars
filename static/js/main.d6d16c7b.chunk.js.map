{"version":3,"sources":["serviceWorker.js","Componets/Header.js","Componets/FilmDetails.js","Componets/Film.js","App.js","Router.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","props","error","film","className","href","id","aria-disabled","title","FilmDetails","state","moreDetails","componentDidMount","params","axios","get","episode_id","then","response","console","log","data","forEach","keyName","row","push","catch","setState","this","director","producer","opening_crawl","JSON","stringify","Component","Film","films","displayFilms","favFilms","ls","fetchFilms","results","length","find","f","isFav","sortFilmsByFav","sortedFilms","sort","reverse","searchHandler","event","searhChars","target","value","toLowerCase","filter","el","indexOf","favFilmsHandler","alert","fid","set","type","placeholder","onChange","map","btnClass","key","onClick","App","Router","exact","path","component","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6d16c7b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nconst Header = props => {\n  const { error, film } = props;\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <a className='navbar-brand' href='/'>\n        Star Wars\n      </a>\n      <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n        <ul className='navbar-nav mr-auto'>\n          <li className='nav-item active'>\n            <a className='nav-link' href='/'>\n              Home <span className='sr-only'>(current)</span>\n            </a>\n          </li>\n          {error ? (\n            \"\"\n          ) : (\n            <li className='nav-item'>\n              <a className='nav-link disabled' aria-disabled='true'>\n                {film.title}\n              </a>\n            </li>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\n\nexport class FilmDetails extends Component {\n  state = {\n    film: {},\n    moreDetails: {},\n    error: false\n  };\n  componentDidMount = () => {\n    const { params } = this.props.match;\n    axios\n      .get(`https://swapi.co/api/films/${params.episode_id}`)\n      .then(response => {\n        return response;\n      })\n      .then(response => {\n        console.log(response.data);\n        let data = {};\n        [\"characters\", \"planets\", \"starships\", \"vehicles\", \"species\"].forEach(\n          keyName => {\n            data[keyName] = [];\n            response.data[keyName].forEach(row => {\n              axios\n                .get(row)\n                .then(response => {\n                  data[keyName].push(response.data);\n                })\n                .catch(error => {\n                  console.log(\"ERROR\", error);\n                });\n            });\n          }\n        );\n        this.setState({\n          film: response.data,\n          moreDetails: data\n        });\n      })\n      .catch(error => {\n        this.setState({ error: true });\n      });\n  };\n\n  render() {\n    const { error, film } = this.state;\n    return (\n      <div>\n        <Header error={error} film={film} />\n        <div className='container'>\n          <div className='main'></div>\n          {/* <div className='row mt-3'></div> */}\n          <div className='row mt-3'>\n            {error ? (\n              <h1>NOT FOUND</h1>\n            ) : (\n              <div className='card'>\n                <div className='card-body'>\n                  <h4 className='card-title'>{film.title}</h4>\n                  <h5 className='card-title'>\n                    Director: {film.director}, Producer: {film.producer}\n                  </h5>\n                  <p className='card-text'>{film.opening_crawl}</p>\n                  {/* characters */}\n                  <div className='card'>\n                    <div className='card-body'>\n                      <h4 className='card-title'>characters</h4>\n                      <ul>\n                        <li>{JSON.stringify(this.state.moreDetails)}</li>\n                        <li>1</li>\n                        <li>1</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FilmDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ls from \"local-storage\";\nexport class Film extends Component {\n  state = {\n    films: [],\n    displayFilms: [],\n    favFilms: ls.get(\"favFilmIds\") || []\n  };\n\n  fetchFilms = () => {\n    axios.get(\"https://swapi.co/api/films/\").then(response => {\n      this.setState({\n        films: response.data.results,\n        displayFilms: response.data.results\n      });\n      if (this.state.favFilms.length > 0) {\n        this.state.favFilms.forEach(id => {\n          let film = this.state.displayFilms.find(function(f) {\n            return f.episode_id === id;\n          });\n          film.isFav = true;\n        });\n        this.setState({ displayFilms: this.state.displayFilms });\n        this.sortFilmsByFav();\n      }\n    });\n  };\n\n  sortFilmsByFav = () => {\n    let sortedFilms = this.state.displayFilms\n      .sort(function(film) {\n        return film.isFav ? 1 : -1;\n      })\n      .reverse();\n    this.setState({ displayFilms: sortedFilms });\n  };\n\n  componentDidMount() {\n    this.fetchFilms();\n  }\n\n  searchHandler = event => {\n    let searhChars = event.target.value.toLowerCase(),\n      displayFilms = this.state.films.filter(el => {\n        let searchValue = el.title.toLowerCase();\n        return searchValue.indexOf(searhChars) !== -1;\n      });\n    this.setState({\n      displayFilms: displayFilms\n    });\n  };\n\n  favFilmsHandler = id => {\n    let film = this.state.displayFilms.find(function(f) {\n      return f.episode_id === id;\n    });\n    film.isFav = !film.isFav;\n    if (film.isFav) {\n      this.state.favFilms.push(id);\n      alert(film.title + \"is added to favorite\");\n    } else {\n      this.state.favFilms = this.state.favFilms.filter(fid => fid !== id);\n    }\n    this.setState({\n      displayFilms: this.state.displayFilms,\n      favFilms: this.state.favFilms\n    });\n    ls.set(\"favFilmIds\", this.state.favFilms);\n    this.sortFilmsByFav();\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='row mt-3'>\n          <input\n            className='form-control mr-sm-2'\n            type='search'\n            placeholder='Search by Film name'\n            onChange={this.searchHandler}\n          />\n        </div>\n        <div className='row mt-3'>\n          <ul className='list-group'>\n            {this.state.displayFilms.map(film => {\n              let btnClass = `ml-2 btn btn-${\n                film.isFav ? \"danger\" : \"primary\"\n              }`;\n              return (\n                <li className='list-group-item p-3' key={film.episode_id}>\n                  <a href={`/films/${film.episode_id}`}>{film.title}</a>\n                  <button\n                    type='button'\n                    className={btnClass}\n                    onClick={() => this.favFilmsHandler(film.episode_id)}>\n                    {film.isFav ? \"UnFavorite\" : \"Favorite\"}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Film;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Componets/Header\";\nimport Film from \"./Componets/Film\";\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header error={true} />\n        <div className='container'>\n          <div className='main'>\n            <Film />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport FilmDetails from \"./Componets/FilmDetails\";\nimport App from \"./App\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={App} />\n      <Route exact path='/films/:episode_id' component={FilmDetails} />\n      <Route path='/' render={() => <h1>Page Not Found</h1>} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./Router\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}